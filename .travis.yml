sudo: false
language: cpp

install:
 - export BASE=`pwd`
 - export CMAKE_URL="https://cmake.org/files/v3.9/cmake-3.9.3-Linux-x86_64.sh"
 - export VALGRIND_URL="http://valgrind.org/downloads/valgrind-3.12.0.tar.bz2"
 - export OPENSSL_URL="https://www.openssl.org/source/openssl-1.0.2k.tar.gz"
 - export BOOST_URL="https://dl.bintray.com/boostorg/release/1.65.1/source/boost_1_65_1.tar.gz"
 - export OS=${TRAVIS_OS_NAME}
 - mkdir ${BASE}/usr
 - test "$OS" == "linux" && wget --no-check-certificate ${CMAKE_URL} -O cmake.sh
 - test "$OS" == "linux" && chmod a+x cmake.sh
 - test "$OS" == "linux" && ./cmake.sh --prefix=${BASE}/usr --skip-license
 - test "$OS" == "linux" && export PATH="${BASE}/usr/bin:$PATH"
 - test "$OS" == "linux" && export LD_LIBRARY_PATH="${BASE}/usr/lib:$LD_LIBRARY_PATH"
 - test "$CXX" == "g++" && export CXX="g++-6" CC="gcc-6"
 - test "$CXX" == "clang++" && [ "$OS" == "linux" ] && export CXX="clang++-3.7" CC="clang-3.7"
 - test "$OS" == "linux" && curl -L $VALGRIND_URL | tar xj && cd valgrind-3.12.0 && ./configure --prefix=${BASE}/usr > /dev/null && make -j3 > /dev/null && make install > /dev/null && cd ..; fi
# boost
 - curl -L $BOOST_URL | tar xz && cd boost_1_65_1 && ./bootstrap.sh && ./b2 -j`nproc` --prefix=${BASE}/usr --with-timer --with-chrono --with-test address-model=64 install > /dev/null && cd ..
 - curl -L $OPENSSL_URL | tar xz
 - "$OS" == "linux" && cd openssl-1.0.2k && ./config --prefix=${BASE}/usr && make -j `nproc` && make install > /dev/null && cd ..
 - "$OS" == "osx"   && cd openssl-1.0.2k && ./Configure darwin64-x86_64-cc --prefix=${BASE}/usr && make -j `nproc` && make install > /dev/null && cd ..

matrix:
  include:
    - os: osx
      compiler: clang
      env: FLAGS="-DMQTT_NO_TLS=ON  -DMQTT_USE_WS=ON"
    - os: osx
      compiler: clang
      env: FLAGS="-DMQTT_NO_TLS=ON  -DMQTT_USE_WS=OFF"
    - os: osx
      compiler: clang
      env: FLAGS="-DMQTT_NO_TLS=OFF -DMQTT_USE_WS=ON"
    - os: osx
      compiler: clang
      env: FLAGS="-DMQTT_NO_TLS=OFF -DMQTT_USE_WS=OFF"
    - os: linux
      compiler: clang
      env: FLAGS="-DMQTT_NO_TLS=ON  -DMQTT_USE_WS=ON"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.7
            - llvm-toolchain-precise
          packages:
            - g++-multilib
            - gcc-multilib
            - gcc-5-multilib
            - g++-5-multilib
            - bzip2
            - clang-3.7
            - libc6-dbg
    - os: linux
      compiler: clang
      env: FLAGS="-DMQTT_NO_TLS=ON  -DMQTT_USE_WS=OFF"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.7
            - llvm-toolchain-precise
          packages:
            - g++-multilib
            - gcc-multilib
            - gcc-5-multilib
            - g++-5-multilib
            - bzip2
            - clang-3.7
            - libc6-dbg
    - os: linux
      compiler: gcc
      env: FLAGS="-DMQTT_NO_TLS=OFF -DMQTT_USE_WS=ON"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-multilib
            - gcc-multilib
            - gcc-6-multilib
            - g++-6-multilib
            - bzip2
            - libc6-dbg
    - os: linux
      compiler: gcc
      env: FLAGS="-DMQTT_NO_TLS=OFF -DMQTT_USE_WS=OFF"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-multilib
            - gcc-multilib
            - gcc-6-multilib
            - g++-6-multilib
            - bzip2
            - libc6-dbg

script:
  - mkdir build && cd build && cmake -DCMAKE_CXX_COMPILER="${CXX}" -DCMAKE_C_COMPILER="${CC}" -DCMAKE_LIBRARY_PATH="${BASE}/usr/lib" -DBOOST_ROOT="${BASE}/usr" -DOPENSSL_ROOT_DIR="${BASE}/usr" $FLAGS .. && make VERBOSE=1 && ctest -VV
